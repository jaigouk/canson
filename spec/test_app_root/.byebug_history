exit
result.values.include? nil
result.values
result
exit
result
exit
result
exit
req.params.empty?
req.params
req = Rack::Request.new(env)
param
re
exit
req.body.read
req.params
req = Rack::Request.new(env)
env
get_param(env)
param
exit
req.params
req
req = Rack::Request.new(env)
Rack::Request.new(env)
env['PATH_INFO']
target = routes[m][env['PATH_INFO']]
env['rack.input'].read
env
exit
env
env['rack.input'].read
env['rack.input'].to_json
env['rack.input'].read
env['rack.input'].gets
env['rack.input'].public_methods
env['rack.input'].read
env['rack.input']
env
env['rack.input'].gets
exit
req.body.read
req.body
JSON.parse( req.body.read )
req
env
param.empty?
req.params.map { |k, _v| k }.first 
req.params.map { |k, _v| k }.first |
req.params
req.body.read
req.body
req.input
req
exit
req.params
req.body.read
req = Rack::Request.new(env)
env.body
env
param
exit
param.empty?
param
req.body.read
req.params
req
param
exit
req.body.read
param = req.params.map { |k, _v| k }.first
req = get_req(env)
env
parse_body(get_req(env))
call_result(env, target)
target
exit
params
exit
parse_body(req)
req
target.call
